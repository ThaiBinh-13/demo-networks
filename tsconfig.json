{
  "compilerOptions": {
    //! Project Options
    //* Basic Options
    "module": "ESNext", //                          Specify module code generation: 'none', 'commonjs', 'amd', 'system', 'umd', 'es2015', or 'ESNext'.
    "target": "ESNext", //                          Specify ECMAScript target version: 'ES3' (default), 'ES5', 'ES2015', 'ES2016', 'ES2017', 'ES2018', 'ES2019' or 'ESNEXT'.,
    "lib": [
      //                                            Specify library files to be included in the compilation.
      "ESNext",
      "DOM",
      "DOM.Iterable",
      "ScriptHost"
    ],

    //* JavaScript
    "allowJs": false, //                            Allow javascript files to be compiled.
    "checkJs": false, //                            Report errors in .js files.

    //* Compilation
    "removeComments": true, //                      Do not emit comments to output.
    "importHelpers": true, //                       Import emit helpers from 'tslib'.

    //! Strict Checks
    "strict": true, //                              Enable all strict type-checking options.

    //! Linter Checks
    "noFallthroughCasesInSwitch": true, //          Report errors for fallthrough cases in switch statement.
    "noImplicitReturns": true, //                   Report error when not all code paths in function return a value.
    "noImplicitAny": false, //                      Report error on expressions and declarations with an implied any type.
    "noUnusedLocals": false, //                     Report errors on unused locals.
    "noUnusedParameters": false, //                 Report errors on unused parameters.

    //! Source Maps
    "sourceMap": true, //                           Generates corresponding '.map' file.
    // "inlineSourceMap": true, //                  Emit a single file with source maps instead of having a separate file.
    // "inlineSources": true, //                    Emit the source alongside the sourcemaps within a single file; requires '--inlineSourceMap' or '--sourceMap' to be set.

    //! JSX
    "jsx": "preserve", //                           Specify JSX code generation: 'preserve', 'react-native', or 'react'.

    //! Module Resolution Options
    "esModuleInterop": true, //                     Enables emit interoperability between CommonJS and ES Modules via creation of namespace objects for all imports. Implies 'allowSyntheticDefaultImports'.
    // "preserveSymlinks": true, //                 Do not resolve the real path of symlinks.
    "moduleResolution": "node", //                  Specify module resolution strategy: 'node' (Node.js) or 'classic' (TypeScript pre-1.6).
    "baseUrl": ".", //                              Base directory to resolve non-absolute module names.
    "paths": {
      "@/*": ["src/*"]
    }, //                                           A series of entries which re-map imports to lookup locations relative to the 'baseUrl'.
    "types": [
      //
      "node",
      "webpack-env"
    ],
    "typeRoots": ["src/typings", "node_modules/@types"],
    "allowSyntheticDefaultImports": true, //        Allow default imports from modules with no default export. This does not affect code emit, just typechecking.

    //! Other options
    "skipLibCheck": true, //                        Skip type checking of declaration files
    "resolveJsonModule": true //                    Include modules imported with .json extension.
  },
  "include": [
    "src/**/*.ts",
    "src/**/*.tsx",
    "src/**/*.vue",
    "tests/**/*.ts",
    "tests/**/*.tsx"
  ],
  "exclude": ["node_modules"]
}
